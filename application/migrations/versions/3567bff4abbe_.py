"""empty message

Revision ID: 3567bff4abbe
Revises:
Create Date: 2025-06-21 07:46:55.351187

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "3567bff4abbe"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("first_name", sa.String(length=255), nullable=False),
        sa.Column("last_name", sa.String(length=255), nullable=False),
        sa.Column("middle_name", sa.String(length=255), nullable=True),
        sa.Column("hash_password", sa.String(length=255), nullable=False),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "accounts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "balance", sa.NUMERIC(precision=15, scale=2), nullable=False
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.CheckConstraint("balance > 0", name="check_balance_positive"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "payments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.UUID(), nullable=False),
        sa.Column("amount", sa.NUMERIC(precision=15, scale=2), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("TIMEZONE('utc', now())"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.CheckConstraint("amount > 0", name="check_amount_positive"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("transaction_id"),
    )
    bind = op.get_bind()
    bind.execute(
        sa.text(
            """
            INSERT INTO users (id, email, hash_password, first_name, last_name, middle_name, is_admin) VALUES
            (:id1, :email1, :hash_password1, :first_name1, :last_name1, :middle_name1, :is_admin1),
            (:id2, :email2, :hash_password2, :first_name2, :last_name2, :middle_name2, :is_admin2)
            """
        ),
        {
            "id1": 2,
            "email1": "test_admin@example.com",
            "hash_password1": "$2b$12$jY7D8CoOfJSRrrLDx8kXbuyPXvP02g.7SlcNLsST13S238ji.a.gy",
            "first_name1": "Иван",
            "last_name1": "Иванов",
            "middle_name1": "Иванович",
            "is_admin1": True,
            "id2": 3,
            "email2": "test_user@example.com",
            "hash_password2": "$2b$12$jY7D8CoOfJSRrrLDx8kXbuyPXvP02g.7SlcNLsST13S238ji.a.gy",
            "first_name2": "Петр",
            "last_name2": "Петров",
            "middle_name2": "Петрович",
            "is_admin2": False,
        },
    )
    bind.execute(
        sa.text(
            """
            INSERT INTO accounts (balance, user_id) VALUES
            (:balance1, :user_id1)
            """
        ),
        {"balance1": 1000, "user_id1": 3},
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("payments")
    op.drop_table("accounts")
    op.drop_table("users")
    # ### end Alembic commands ###
